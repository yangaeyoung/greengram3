<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.green.greengram3.dm.DmMapper">
    <!-- //////////////////////////////////////////////// t_dm -->
    <insert id="insDm" useGeneratedKeys="true" keyProperty="idm">
        INSERT INTO t_dm
        SET last_msg = NULL
    </insert>

    <!-- /////////////////////////////////////////////// t_dm_user -->
    <insert id="insDmUser">
        INSERT INTO t_dm_user
        SET idm = #{idm}
        , iuser = #{iuser}
    </insert>
    <!--
    <insert id="insDmUser">
        INSERT INTO t_dm_user
          (idm, iuser)
        VALUES
         (#{idm}, #{iuser}),
         (#{idm}, #{iuser})
     </insert>
     -->

    <select id="selOtherPersonByLoginUser">
        SELECT B.iuser, B.pic, B.firebase_token AS firebaseToken
        FROM t_dm_user A
        INNER JOIN t_user B
        ON A.iuser = B.iuser
        WHERE A.idm = #{idm}
        AND A.iuser != #{loginedIuser}
    </select>

    <update id="updDmLastMsg">
        UPDATE t_dm
        SET last_msg = #{msg}
        WHERE idm = #{idm}
    </update>

    <select id="selDmUserCheck">
        SELECT idm
        FROM t_dm_user
        WHERE iuser = #{loginedIuser}
        OR iuser = #{otherPersonIuser}
        GROUP BY idm
        HAVING COUNT(idm) = 2
    </select>
    <!-- WHERE절까지는 두 유저가 대화한 idm방을 모두 찾고, 그룹으로 중복되는 idm방을 묶으며 idm방이 2개인 것을 찾으면 두 유저가 대화 중인 방을 찾을 수 있음 -->

    <update id="updDmLastMsgAfterDelByLastMsg">
        UPDATE t_dm A
        INNER JOIN (
        SELECT idm, msg, created_at AS createdAt
        FROM t_dm_msg
        WHERE idm = #{idm}
        ORDER BY seq DESC
        LIMIT 1
        ) B
        ON A.idm = B.idm
        SET A.last_msg = B.msg
        , A.last_msg_at = B.created_at
        WHERE A.idm = #{idm}
    </update>

    <!-- //////////////////////////////////////////////// t_dm_msg -->
    <insert id="insDmMsg">
        <selectKey resultType="int" keyProperty="seq" order="BEFORE">
            SELECT IFNULL(MAX(seq), 0) + 1
            FROM t_dm_msg
            WHERE idm = #{idm}
        </selectKey>
        INSERT INTO t_dm_msg
        SET idm = #{idm}
        , seq = #{seq}
        , iuser = #{loginedIuser}
        , msg = #{msg}
    </insert>
    <!-- 마지막 메시지를 찾아 새로운 메시지 insert -->

    <select id="updDmLstMsg">
        UPDATE t_dm
        SET last_msg = #{msg}
        WHERE idm = #{idm}
    </select>


    <select id="selDmMsgAll">
        SELECT A.seq, A.iuser as writerIuser, A.msg, A.created_at as createdAt, B.pic as writerPic
        <!-- seq은 pk값을 알아야 지정 레코드를 출력 및 삭제 용이 -->
        FROM t_dm_msg A
        JOIN t_user B
        ON A.iuser = B.iuser
        WHERE A.idm = #{idm}
        ORDER BY A.seq DESC
        LIMIT #{startIdx}, #{rowCount}
    </select>

    <select id="getDmAll">
        SELECT
        A.idm, A.last_msg AS lastMsg, A.last_msg_at AS lastMsgAt
        , D.iuser AS otherPersonIuser, D.nm AS otherPersonNm, D.pic AS otherPersonPic
        FROM t_dm A
        INNER JOIN t_dm_user B
        ON A.idm = B.idm
        INNER JOIN t_dm_user C
        ON B.idm = C.idm
        INNER JOIN t_user D
        ON C.iuser = D.iuser
        WHERE B.iuser = #{loginedIuser}
        AND C.iuser != #{loginedIuser}
        ORDER BY A.last_msg_at DESC
        LIMIT #{startIdx}, #{rowCount}
    </select>

    <delete id="delDmMsg">
        DELETE FROM t_dm_msg
        WHERE idm = #{idm}
        AND seq = #{seq}
        AND iuser = #{iuser}
    </delete>


</mapper>